[
    {
        "name": "Energy-HeapSeedPool",
        "folder": ".",
        "recursive": false,
        "files": [
            "PropLang.v"
        ],
        "variants": [
            "LeftistHeap.insert (mkSeed a f 1) pool",
            "LeftistHeap.insert (mkSeed a f 10) pool",
            "LeftistHeap.insert (mkSeed a f 100) pool",
            "LeftistHeap.insert (mkSeed a f 1000) pool"
        ]
    },
    {
        "name": "Energy-FIFOSeedPool",
        "folder": ".",
        "recursive": false,
        "files": [
            "PropLang.v"
        ],
        "variants": [
            "| (a, f) => FIFOQueue.push (mkSeed a f 1) pool",
            "| (a, f) => FIFOQueue.push (mkSeed a f 10) pool",
            "| (a, f) => FIFOQueue.push (mkSeed a f 100) pool",
            "| (a, f) => FIFOQueue.push (mkSeed a f 1000) pool"
        ]
    },
    {
        "name": "Energy-FILOSeedPool",
        "folder": ".",
        "recursive": false,
        "files": [
            "PropLang.v"
        ],
        "variants": [
            "| (a, f) => FILOQueue.push (mkSeed a f 1) pool",
            "| (a, f) => FILOQueue.push (mkSeed a f 10) pool",
            "| (a, f) => FILOQueue.push (mkSeed a f 100) pool",
            "| (a, f) => FILOQueue.push (mkSeed a f 1000) pool"
        ]
    },
    {
        "name": "Energy-DynamicMonotonicSingletonPool",
        "folder": ".",
        "recursive": false,
        "files": [
            "PropLang.v"
        ],
        "variants": [
            "| (a, f) => {| seed := Some (mkSeed a f 1) |}",
            "| (a, f) => {| seed := Some (mkSeed a f 10) |}",
            "| (a, f) => {| seed := Some (mkSeed a f 100) |}",
            "| (a, f) => {| seed := Some (mkSeed a f 1000) |}"
        ]
    },
    {
        "name": "Energy-DynamicResettingSingletonPool",
        "folder": ".",
        "recursive": false,
        "files": [
            "PropLang.v"
        ],
        "variants": [
            "| (a, f) => {| seed := Some (mkSeed a f 1) |}",
            "| (a, f) => {| seed := Some (mkSeed a f 10) |}",
            "| (a, f) => {| seed := Some (mkSeed a f 100) |}",
            "| (a, f) => {| seed := Some (mkSeed a f 1000) |}"
        ]
    },
    {
        "name": "Energy-StaticSingletonPool",
        "folder": ".",
        "recursive": false,
        "files": [
            "PropLang.v"
        ],
        "variants": [
            "| (a, f) => {| seed := Some (mkSeed a f 1) |}"
        ]
    }
]